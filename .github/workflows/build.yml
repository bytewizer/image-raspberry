name: Release

on:
  release:
    branches: 
    - main
    types: [published]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  machine-matrix:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        machine: [rterminal-image]

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v6
        with:
          root-reserve-mb: 2048
          swap-size-mb: 1024
          temp-reserve-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Clone repository
        uses: actions/checkout@v3

      - name: Extract build information into variables
      id: info
      run: |
        echo "##[set-output name=version;]$(echo $env:GITHUB_REF.Replace('refs/tags/v',''))"
        echo "##[set-output name=build;]$(echo $(git rev-list --count HEAD))"
    
    - name: Show release event information
      run: |
        echo "release.name        = ${{ github.event.release.name }}"
        echo "release.body        = ${{ github.event.release.body }}"
        echo "release.upload_url  = ${{ github.event.release.upload_url }}"
        echo "release.html_url    = ${{ github.event.release.html_url }}"
        echo "release.tag_name    = ${{ github.event.release.tag_name }}"
        echo "release.draft       = ${{ github.event.release.draft }}"
        echo "release.prerelease  = ${{ github.event.release.prerelease }}"

      - name: Show build information
        run: |
          echo build=${{ steps.info.outputs.build }}

      - name: Install required dependencies
        run: ./repo-mgr.sh install

      - name: Clone required repos
        run: ./repo-mgr.sh init

      - name: Run build
        run: ./run-build.sh

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.machine }}-artifacts
          path: ./build/tmp/deploy/images/${{ matrix.machine }}/

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: \builds\nuget-packages.zip
          asset_name: Packages
          asset_content_type: application/zip

      - name: Disk space report after build
        run: |
          echo "Memory and swap:"
          free
          echo
          swapon --show
          echo
          echo "Available storage:"
          df -h
          echo
